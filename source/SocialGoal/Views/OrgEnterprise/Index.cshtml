@using Microsoft.AspNet.Identity
@model SocialGoal.Model.ViewModels.OrgEnterpriseViewModel
@section styles
{
    @Styles.Render("~/Content/ztrtee/css")
    <style type="text/css">
        .ztree li span.button.add {
            margin-left: 2px;
            margin-right: -1px;
            background-position: -144px 0;
            vertical-align: top;
            *vertical-align: middle;
        }
    </style>
}
<div id="content">
    <!-- Bread crumb is created dynamically -->
    <!--
       The ID "widget-grid" will start to initialize all widgets below
       You do not need to use widgets if you dont want to. Simply remove
       the <section></section> and you can use wells or panels instead
       -->
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <!-- row -->
        <div class="row">
            <article class="col-xs-4 col-sm-4 col-md-4 col-lg-4 sortable-grid ui-sortable">
                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget " id="wid-id-0" data-widget-editbutton="false">
                    <!-- widget options:
                    usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">
                    data-widget-colorbutton="false"
                    data-widget-editbutton="false"
                    data-widget-togglebutton="false"
                    data-widget-deletebutton="false"
                    data-widget-fullscreenbutton="false"
                    data-widget-custombutton="false"
                    data-widget-collapsed="true"
                    data-widget-sortable="false"
                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>企业信息树</h2>
                    </header>
                    <!-- widget div-->
                    <div>
                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->
                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body  no-padding">
                            <div class="widget-body-toolbar">
                                <div class="row">
                                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                            <input class="form-control" id="key" placeholder="企业名称" type="text">
                                        </div>
                                    </div>

                                </div>
                            </div>
                            <div class="table-responsive">
                                <ul id="tree" class="ztree"></ul>
                            </div>
                        </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->
                </div>
                <!-- end widget -->

            </article>
            <article class="col-xs-8 col-sm-8 col-md-8 col-lg-8 sortable-grid ui-sortable">
                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget " id="wid-id-1" data-widget-editbutton="false">
                    <!-- widget options:
                    usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">
                    data-widget-colorbutton="false"
                    data-widget-editbutton="false"
                    data-widget-togglebutton="false"
                    data-widget-deletebutton="false"
                    data-widget-fullscreenbutton="false"
                    data-widget-custombutton="false"
                    data-widget-collapsed="true"
                    data-widget-sortable="false"
                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>企业详细信息</h2>
                    </header>
                    <!-- widget div-->
                    <div>
                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->
                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body">

                            @using (Ajax.BeginForm("PostUpdate", "OrgEnterprise", null, new AjaxOptions
      {
          HttpMethod = "Post",
          OnSuccess = "ShowResult",
      },
     new { @class = "form-horizontal" })
   )
                            {
                                <fieldset>
                                    <legend>企业信息</legend>
                                    @Html.ValidationSummary(true, "提交信息有误，调整后在提交！")
                                    @Html.HiddenFor(m => m.oper)
                                    @Html.HiddenFor(m => m.OrgEnterpriseId)
                                    @Html.HiddenFor(m => m.OrgEnterprisePId)
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.OrgEnterpriseNum, new { @class = "col-md-2 control-label" })
                                        <div class="col-md-4">
                                            @Html.TextBoxFor(m => m.OrgEnterpriseNum, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.OrgEnterpriseNum)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.OrgEnterpriseName, new { @class = "col-md-2 control-label" })
                                        <div class="col-md-4">
                                            @Html.TextBoxFor(m => m.OrgEnterpriseName, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.OrgEnterpriseName)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.OrgEnterpriseDescribe, new { @class = "col-md-2 control-label" })
                                        <div class="col-md-4">
                                            @Html.TextAreaFor(m => m.OrgEnterpriseDescribe, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.OrgEnterpriseDescribe)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.OrgEnterpriseUpdateTime, new { @class = "col-md-2 control-label" })
                                        <div class="col-md-4">
                                            @Html.TextBoxFor(m => m.OrgEnterpriseUpdateTime, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.OrgEnterpriseName)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.OrgEnterpriseCreateTime, new { @class = "col-md-2 control-label" })
                                        <div class="col-md-4">
                                            @Html.TextBoxFor(m => m.OrgEnterpriseCreateTime, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.OrgEnterpriseCreateTime)
                                        </div>
                                    </div>
                                    <div class="form-actions form-actions-padding-sm">
                                        <div class="row">
                                            <div class="col-md-10 col-md-offset-2">
                                                <button class="btn btn-primary" type="submit">
                                                    <i class="icon-save"></i>
                                                    保存
                                                </button>
                                                <button class="btn" type="reset">清空</button>
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>
                            }

                        </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->
                </div>
                <!-- end widget -->
            </article>
        </div>

        <!-- end row -->
    </section>
    <!-- end widget grid -->

    <div id="dialog" title="企业树加载中">
        <p>数据加载中.</p>
    </div>

</div>
@section scripts{
    @Scripts.Render("~/bundles/ztree/js")
    @Scripts.Render("~/bundles/jqGrid/js")
    <script type="text/javascript">
        var userId = "noLogin";
        if ("@User.Identity.IsAuthenticated") {
            userId = "@User.Identity.GetUserId()";
        }
        //组织结构节点信息
        var zTreeObj;
        var key;
        var setting = {
            data: {
                key: {
                    title: "name"
                },
                simpleData: {
                    enable: true
                }
            },
            view: {
                addHoverDom: addHoverDom,
                removeHoverDom: removeHoverDom,
                selectedMulti: false,
                fontCss: getFontCss,
                showTitle: true
            },
            edit: {
                enable: true,
                editNameSelectAll: true//,
                //showRemoveBtn: showRemoveBtn,
                // showRenameBtn: showRenameBtn
            },
            callback: {
                beforeDrag: beforeDrag,
                beforeEditName: beforeEditName,
                beforeRemove: beforeRemove,
                beforeRename: beforeRename,
                onRemove: onRemove,
                onRename: onRename,
                onClick: zTreeOnClick
            }
        };
        //点击事件
        function zTreeOnClick(event, treeId, treeNode) {
            $("#oper").val("edit");
            $("#OrgEnterpriseId").val(treeNode.id);
            $("#OrgEnterprisePId").val(treeNode.PID);
            $("#OrgEnterpriseNum").val(treeNode.OrgEnterpriseNum);
            $("#OrgEnterpriseName").val(treeNode.name);
            $("#OrgEnterpriseDescribe").val(treeNode.OrgEnterpriseDescribe);
            $("#OrgEnterpriseCreateTime").val(treeNode.OrgEnterpriseCreateTime);
            $("#OrgEnterpriseUpdateTime").val(treeNode.OrgEnterpriseUpdateTime);
        };
        function beforeDrag(treeId, treeNodes) {
            return false;
        }
        function beforeEditName(treeId, treeNode) {
            var zTree = $.fn.zTree.getZTreeObj("tree");
            zTree.selectNode(treeNode);
            return confirm("进入节点 -- " + treeNode.name + " 的编辑状态吗？");
        }
        function beforeRemove(treeId, treeNode) {
            var zTree = $.fn.zTree.getZTreeObj("tree");
            zTree.selectNode(treeNode);
            return confirm("确认删除 节点 -- " + treeNode.name + " 吗？");
        }
        //删除节点
        function onRemove(e, treeId, treeNode) {
            SubmitAjax("del", treeNode.id, treeNode.id, treeNode.id);
        }
        function beforeRename(treeId, treeNode, newName, isCancel) {
            if (newName.length == 0) {
                alert("节点名称不能为空.");
                var zTree = $.fn.zTree.getZTreeObj("tree");
                setTimeout(function () { zTree.editName(treeNode) }, 10);
                return false;
            }
            return true;
        }
        //编辑节点
        function onRename(e, treeId, treeNode, isCancel) {
            SubmitAjax("edit", treeNode.id, treeNode.PID, treeNode.name);

        }
        function showRemoveBtn(treeId, treeNode) {
            return !treeNode.isFirstNode;
        }
        function showRenameBtn(treeId, treeNode) {
            return !treeNode.isLastNode;
        }

        var newCount = 1;
        function addHoverDom(treeId, treeNode) {
            var sObj = $("#" + treeNode.tId + "_span");
            if (treeNode.editNameFlag || $("#addBtn_" + treeNode.tId).length > 0) return;
            var addStr = "<span class='button add' id='addBtn_" + treeNode.tId
				+ "' title='add node' onfocus='this.blur();'></span>";
            sObj.after(addStr);
            var btn = $("#addBtn_" + treeNode.tId);
            if (btn) btn.bind("click", function () {
                var zTree = $.fn.zTree.getZTreeObj("tree");
                var idGuid = getGuidGenerator()
                var namePost = "new node" + (newCount++);
                SubmitAjax("add", idGuid, treeNode.id, namePost, "");
                zTree.addNodes(treeNode, { id: idGuid, pId: treeNode.id, name: namePost });
                return false;
            });
        };
        function removeHoverDom(treeId, treeNode) {
            $("#addBtn_" + treeNode.tId).unbind().remove();
        };
        //从服务器获取数据
        var treeData = null;
        function GetDatas() {
            $("#dialog").dialog("open");
            $.ajax({
                url: '@Url.Content("~/OrgEnterprise/GetOrgEnterpriseZtree/")', //该页面为处理信息页面，要求页面文件为空。（实际项目中建议用HttpHandler）
                type: "post",                //请求发送方式
                dataType: "json",       //返回值有： text 为纯文本，json对象，html页面
                userId: userId,   //传递的参数，传递过去后用 Request.Params["name1"]) 取出。
                //请求成功执行
                success: function (data, textStatus) {
                    //data 为返回值,初始化树形控件
                    treeData = data;
                    zTreeObj = $.fn.zTree.init($("#tree"), setting, data);
                    //CheckedNodes();
                    $("#dialog").dialog("close");
                }
            });
        }
        //查询
        function focusKey(e) {
            if (key.hasClass("empty")) {
                key.removeClass("empty");
            }
        }
        function blurKey(e) {
            if (key.get(0).value === "") {
                key.addClass("empty");
            }
        }
        function getFontCss(treeId, treeNode) {
            return (!!treeNode.highlight) ? { color: "#A60000", "font-weight": "bold" } : { color: "#333", "font-weight": "normal" };
        }
        function filter(node) {
            return !node.isParent && node.isFirstNode;
        }

        var lastValue = "", nodeList = [], fontCss = {};

        function searchNode(e) {
            zTreeObj = $.fn.zTree.init($("#tree"), setting, treeData);
            var value = $.trim(key.get(0).value);
            var zTree = $.fn.zTree.getZTreeObj("tree");
            //var node = zTree.getNodeByParam("name", value);
            //if (node === null) {
            //    nodeList = [];
            //} else {
            //    nodeList = [node];
            //}
            nodeList = zTree.getNodesByParamFuzzy("name", value);
            updateNodes(true);
        }
        function updateNodes(highlight) {
            var zTree = $.fn.zTree.getZTreeObj("tree");
            for (var i = 0, l = nodeList.length; i < l; i++) {
                nodeList[i].highlight = highlight;
                zTree.updateNode(nodeList[i]);
            }
        }
        //提交后ajax返回信息
        function ShowResult(data) {
            alert("aa");
            // $("#detailsID").html("返回信息：" + data);
            //var dialog = top.dialog.get(window);
            //setTimeout(function () {
            //    dialog.close().remove();
            //}, 2000);
        }
        function SubmitAjax(oper, id, pid, name) {
            $.ajax({
                url: '@Url.Content("~/OrgEnterprise/Post/")', //该页面为处理信息页面，要求页面文件为空。（实际项目中建议用HttpHandler）
                type: "post",                //请求发送方式
                dataType: "json",       //返回值有： text 为纯文本，json对象，html页面
                data: { oper: oper, OrgEnterpriseId: id, OrgEnterprisePId: pid, OrgEnterpriseName: name, id: id },
                //请求成功执行
                success: function (data, textStatus) {
                    //data 为返回值,初始化树形控件

                    //CheckedNodes();
                }
            });
        }
        //生成随机的GUID
        function getGuidGenerator() {
            var S4 = function () {
                return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);
            };
            return (S4() + S4() + "-" + S4() + "-" + S4() + "-" + S4() + "-" + S4() + S4() + S4());
        }
        $(document).ready(function () {
            pageSetUp();
            $("#dialog").dialog({
                autoOpen: false,
                modal: true
            });

            GetDatas();
            key = $("#key");
            key.bind("focus", focusKey)
            .bind("blur", blurKey)
            .bind("propertychange", searchNode)
            .bind("input", searchNode);          

        });

    </script>
}

